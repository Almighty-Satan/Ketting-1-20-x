--- a/net/minecraft/gametest/framework/GameTestServer.java
+++ b/net/minecraft/gametest/framework/GameTestServer.java
@@ -18,6 +_,7 @@
 import net.minecraft.CrashReport;
 import net.minecraft.SystemReport;
 import net.minecraft.Util;
+import net.minecraft.commands.CommandSourceStack;
 import net.minecraft.commands.Commands;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.LayeredRegistryAccess;
@@ -49,6 +_,7 @@
 import net.minecraft.world.level.levelgen.presets.WorldPresets;
 import net.minecraft.world.level.storage.LevelStorageSource;
 import net.minecraft.world.level.storage.PrimaryLevelData;
+import org.bukkit.command.CommandSender;
 import org.slf4j.Logger;
 
 public class GameTestServer extends MinecraftServer {
@@ -105,13 +_,14 @@
    public boolean initServer() {
       this.setPlayerList(new PlayerList(this, this.registries(), this.playerDataStorage, 1) {
       });
-      this.loadLevel();
+      if (!net.minecraftforge.server.ServerLifecycleHooks.handleServerAboutToStart(this)) return false;
+      this.loadLevel(storageSource.getLevelId()); // CraftBukkit
       ServerLevel serverlevel = this.overworld();
       serverlevel.setDefaultSpawnPos(this.spawnPos, 0.0F);
       int i = 20000000;
       serverlevel.setWeatherParameters(20000000, 20000000, false, false);
       LOGGER.info("Started game test server");
-      return true;
+      return net.minecraftforge.server.ServerLifecycleHooks.handleServerStarting(this);
    }
 
    public void tickServer(BooleanSupplier p_177619_) {
@@ -221,6 +_,13 @@
    public boolean shouldInformAdmins() {
       return false;
    }
+
+   // Ketting start
+   @Override
+   public CommandSender getBukkitSender(CommandSourceStack wrapper) {
+      return null;
+   }
+   // Ketting end
 
    public boolean isSingleplayerOwner(GameProfile p_177617_) {
       return false;
