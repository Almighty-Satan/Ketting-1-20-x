--- a/net/minecraft/world/level/block/entity/HopperBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/HopperBlockEntity.java
@@ -1,6 +_,7 @@
 package net.minecraft.world.level.block.entity;
 
 import java.util.List;
+import java.util.Optional;
 import java.util.function.BooleanSupplier;
 import java.util.stream.Collectors;
 import java.util.stream.IntStream;
@@ -10,10 +_,7 @@
 import net.minecraft.core.NonNullList;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.chat.Component;
-import net.minecraft.world.Container;
-import net.minecraft.world.ContainerHelper;
-import net.minecraft.world.WorldlyContainer;
-import net.minecraft.world.WorldlyContainerHolder;
+import net.minecraft.world.*;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntitySelector;
 import net.minecraft.world.entity.item.ItemEntity;
@@ -30,6 +_,11 @@
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.shapes.BooleanOp;
 import net.minecraft.world.phys.shapes.Shapes;
+import org.bukkit.craftbukkit.v1_20_R2.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.v1_20_R2.inventory.CraftInventory;
+import org.bukkit.craftbukkit.v1_20_R2.inventory.CraftItemStack;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.event.inventory.InventoryMoveItemEvent;
 
 public class HopperBlockEntity extends RandomizableContainerBlockEntity implements Hopper {
    public static final int MOVE_ITEM_SPEED = 8;
@@ -38,6 +_,36 @@
    private int cooldownTime = -1;
    private long tickedGameTime;
 
+   // CraftBukkit start - add fields and methods
+   public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+   private int maxStack = MAX_STACK;
+
+   public List<ItemStack> getContents() {
+       return this.items;
+   }
+
+   public void onOpen(CraftHumanEntity who) {
+       transaction.add(who);
+   }
+
+   public void onClose(CraftHumanEntity who) {
+      transaction.remove(who);
+   }
+
+   public List<HumanEntity> getViewers() {
+       return transaction;
+   }
+
+   @Override
+  public int getMaxStackSize() {
+       return maxStack;
+   }
+
+   public void setMaxStackSize(int size) {
+      maxStack = size;
+   }
+   // CraftBukkit end
+
    public HopperBlockEntity(BlockPos p_155550_, BlockState p_155551_) {
       super(BlockEntityType.HOPPER, p_155550_, p_155551_);
    }
@@ -130,7 +_,8 @@
       return true;
    }
 
-   private static boolean ejectItems(Level p_155563_, BlockPos p_155564_, BlockState p_155565_, Container p_155566_) {
+   private static boolean ejectItems(Level p_155563_, BlockPos p_155564_, BlockState p_155565_, HopperBlockEntity p_155566_) {
+      if (net.minecraftforge.items.VanillaInventoryCodeHooks.insertHook(p_155566_)) return true;
       Container container = getAttachedContainer(p_155563_, p_155564_, p_155565_);
       if (container == null) {
          return false;
@@ -142,7 +_,15 @@
             for(int i = 0; i < p_155566_.getContainerSize(); ++i) {
                if (!p_155566_.getItem(i).isEmpty()) {
                   ItemStack itemstack = p_155566_.getItem(i).copy();
-                  ItemStack itemstack1 = addItem(p_155566_, container, p_155566_.removeItem(i, 1), direction);
+                  // CraftBukkit start
+                  // Ketting start
+                  //ItemStack itemstack1 = addItem(p_155566_, container, p_155566_.removeItem(i, 1), direction);
+                  ItemStack itemstack1 = craft_bukkit_ejectItems(p_155563_, p_155566_, direction, container, itemstack, i);
+                  if (itemstack1 == null){
+                      return false;
+                  }
+                  // Ketting end
+                  // CraftBukkit end
                   if (itemstack1.isEmpty()) {
                      container.setChanged();
                      return true;
@@ -157,6 +_,33 @@
       }
    }
 
+   // Ketting start
+   private static  @Nullable ItemStack craft_bukkit_ejectItems(Level world, HopperBlockEntity iinventory, Direction enumdirection, Container iinventory1, ItemStack itemstack, int i){
+     // CraftBukkit start - Call event when pushing items into other inventories
+     CraftItemStack oitemstack = CraftItemStack.asCraftMirror(iinventory.removeItem(i, 1));
+
+     org.bukkit.inventory.Inventory destinationInventory;
+     // Have to special case large chests as they work oddly
+     if (iinventory1 instanceof ChestBlock.DoubleInventory) {
+         destinationInventory = new org.bukkit.craftbukkit.v1_20_R2.inventory.CraftInventoryDoubleChest((ChestBlock.DoubleInventory) iinventory1);
+     } else if (iinventory1.getOwner() != null) {
+         destinationInventory = iinventory1.getOwner().getInventory();
+     } else {
+         destinationInventory = new CraftInventory(iinventory);
+     }
+
+     InventoryMoveItemEvent event = new InventoryMoveItemEvent(iinventory.getOwner().getInventory(), oitemstack.clone(), destinationInventory, true);
+     world.getCraftServer().getPluginManager().callEvent(event);
+     if (event.isCancelled()) {
+         iinventory.setItem(i, itemstack);
+         iinventory.setCooldown(8); // Delay hopper checks
+         return null;
+     }
+     return addItem(iinventory, iinventory1, CraftItemStack.asNMSCopy(event.getItem()), enumdirection);
+     // CraftBukkit end
+   }
+   // Ketting end
+
    private static IntStream getSlots(Container p_59340_, Direction p_59341_) {
       return p_59340_ instanceof WorldlyContainer ? IntStream.of(((WorldlyContainer)p_59340_).getSlotsForFace(p_59341_)) : IntStream.range(0, p_59340_.getContainerSize());
    }
@@ -175,6 +_,8 @@
    }
 
    public static boolean suckInItems(Level p_155553_, Hopper p_155554_) {
+      Boolean ret = net.minecraftforge.items.VanillaInventoryCodeHooks.extractHook(p_155553_, p_155554_);
+      if (ret != null) return ret;
       Container container = getSourceContainer(p_155553_, p_155554_);
       if (container != null) {
          Direction direction = Direction.DOWN;
@@ -414,5 +_,14 @@
 
    protected AbstractContainerMenu createMenu(int p_59312_, Inventory p_59313_) {
       return new HopperMenu(p_59312_, p_59313_, this);
+   }
+
+   @Override
+   protected net.minecraftforge.items.IItemHandler createUnSidedHandler() {
+      return new net.minecraftforge.items.VanillaHopperItemHandler(this);
+   }
+
+   public long getLastUpdateTime() {
+      return this.tickedGameTime;
    }
 }
