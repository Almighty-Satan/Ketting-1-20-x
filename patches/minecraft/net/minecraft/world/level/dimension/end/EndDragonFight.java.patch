--- a/net/minecraft/world/level/dimension/end/EndDragonFight.java
+++ b/net/minecraft/world/level/dimension/end/EndDragonFight.java
@@ -69,8 +_,8 @@
    private static final int GATEWAY_DISTANCE = 96;
    public static final int DRAGON_SPAWN_Y = 128;
    private final Predicate<Entity> validPlayer;
-   private final ServerBossEvent dragonEvent = (ServerBossEvent)(new ServerBossEvent(Component.translatable("entity.minecraft.ender_dragon"), BossEvent.BossBarColor.PINK, BossEvent.BossBarOverlay.PROGRESS)).setPlayBossMusic(true).setCreateWorldFog(true);
-   private final ServerLevel level;
+   public final ServerBossEvent dragonEvent = (ServerBossEvent)(new ServerBossEvent(Component.translatable("entity.minecraft.ender_dragon"), BossEvent.BossBarColor.PINK, BossEvent.BossBarOverlay.PROGRESS)).setPlayBossMusic(true).setCreateWorldFog(true);
+   public final ServerLevel level;
    private final BlockPos origin;
    private final ObjectArrayList<Integer> gateways = new ObjectArrayList<>();
    private final BlockPattern exitPortalPattern;
@@ -82,12 +_,12 @@
    private boolean previouslyKilled;
    private boolean skipArenaLoadedCheck = false;
    @Nullable
-   private UUID dragonUUID;
+   public UUID dragonUUID;
    private boolean needsStateScanning = true;
    @Nullable
-   private BlockPos portalLocation;
+   public BlockPos portalLocation;
    @Nullable
-   private DragonRespawnAnimation respawnStage;
+   public DragonRespawnAnimation respawnStage;
    private int respawnTime;
    @Nullable
    private List<EndCrystal> respawnCrystals;
@@ -216,7 +_,7 @@
 
    }
 
-   protected void setRespawnStage(DragonRespawnAnimation p_64088_) {
+   public void setRespawnStage(DragonRespawnAnimation p_64088_) {
       if (this.respawnStage == null) {
          throw new IllegalStateException("Dragon respawn isn't in progress, can't skip ahead in the animation.");
       } else {
@@ -254,7 +_,7 @@
    }
 
    @Nullable
-   private BlockPattern.BlockPatternMatch findExitPortal() {
+   public BlockPattern.BlockPatternMatch findExitPortal() {
       ChunkPos chunkpos = new ChunkPos(this.origin);
 
       for(int i = -8 + chunkpos.x; i <= 8 + chunkpos.x; ++i) {
@@ -387,7 +_,7 @@
       });
    }
 
-   private void spawnExitPortal(boolean p_64094_) {
+   public void spawnExitPortal(boolean p_64094_) {
       EndPodiumFeature endpodiumfeature = new EndPodiumFeature(p_64094_);
       if (this.portalLocation == null) {
          for(this.portalLocation = this.level.getHeightmapPos(Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, EndPodiumFeature.getLocation(this.origin)).below(); this.level.getBlockState(this.portalLocation).is(Blocks.BEDROCK) && this.portalLocation.getY() > this.level.getSeaLevel(); this.portalLocation = this.portalLocation.below()) {
@@ -453,7 +_,7 @@
       return this.previouslyKilled;
    }
 
-   public void tryRespawn() {
+   public boolean tryRespawn() { // CraftBukkit - return boolean
       if (this.dragonKilled && this.respawnStage == null) {
          BlockPos blockpos = this.portalLocation;
          if (blockpos == null) {
@@ -475,19 +_,19 @@
          for(Direction direction : Direction.Plane.HORIZONTAL) {
             List<EndCrystal> list = this.level.getEntitiesOfClass(EndCrystal.class, new AABB(blockpos1.relative(direction, 2)));
             if (list.isEmpty()) {
-               return;
+               return false; // CraftBukkit - return value
             }
 
             list1.addAll(list);
          }
 
          LOGGER.debug("Found all crystals, respawning dragon.");
-         this.respawnDragon(list1);
+         return this.respawnDragon(list1); // CraftBukkit - return value
       }
-
+      return false; // CraftBukkit - return value
    }
 
-   private void respawnDragon(List<EndCrystal> p_64092_) {
+   public boolean respawnDragon(List<EndCrystal> p_64092_) { // CraftBukkit - return boolean
       if (this.dragonKilled && this.respawnStage == null) {
          for(BlockPattern.BlockPatternMatch blockpattern$blockpatternmatch = this.findExitPortal(); blockpattern$blockpatternmatch != null; blockpattern$blockpatternmatch = this.findExitPortal()) {
             for(int i = 0; i < this.exitPortalPattern.getWidth(); ++i) {
@@ -506,8 +_,9 @@
          this.respawnTime = 0;
          this.spawnExitPortal(false);
          this.respawnCrystals = p_64092_;
+         return true; // CraftBukkit - return value
       }
-
+      return false; // CraftBukkit - return value
    }
 
    public void resetSpikeCrystals() {
@@ -517,7 +_,14 @@
             endcrystal.setBeamTarget((BlockPos)null);
          }
       }
-
+   }
+
+   public void addPlayer(ServerPlayer player) {
+      this.dragonEvent.addPlayer(player);
+   }
+
+   public void removePlayer(ServerPlayer player) {
+      this.dragonEvent.removePlayer(player);
    }
 
    @Nullable
